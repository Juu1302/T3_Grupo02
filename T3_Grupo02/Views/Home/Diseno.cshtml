
@{
    ViewData["Title"] = "Diseño";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="text-center">
    <h2 class="display-5">Diseño de Software</h2>
    <p>
        El Diseño de Software es el proceso de planificar y definir la estructura, 
        componentes, módulos, interfaces y datos de un sistema o aplicación antes 
        de que se implemente. Este diseño se enfoca en transformar los requisitos 
        y especificaciones en una solución detallada y comprensible, lo que permite 
        a los desarrolladores construir software eficiente, escalable y mantenible. 
        Incluye la elección de patrones de diseño, arquitecturas de software, y la 
        planificación de cómo los distintos elementos interactúan para cumplir con 
        los objetivos funcionales y no funcionales del sistema.
    </p>
    <img src="~/imagenes/disenoarqui.jpg" class="img-fluid" width="500" height="400" />

    <br />
    <br />
    <h5>Estos son algunos libros que te pueden interesar by Kaleb :)</h5>

    <div class="row mt-4">
        <div class="col-md-4">
            <div class="p-3 border bg-light">
                <h4>Design Patterns: Elements of Reusable Object-Oriented Software</h4>
                <p>
                    Este clásico de Erich Gamma y otros autores documenta patrones 
                    de diseño esenciales para crear software orientado a objetos. 
                    Aunque los ejemplos están en C++ y Smalltalk, las ideas son 
                    ampliamente aplicables y siguen siendo relevantes hoy en día. 
                    Puedes encontrarlo en
                    <a href="https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612" target="_blank"> Amazon</a>
                </p>
                <img src="~/imagenes/diseno1.jpg" class="img-fluid" width="300" height="200" />
            </div>
        </div>
        <div class="col-md-4">
            <div class="p-3 border bg-light">
                <h4>Refactoring: Improving the Design of Existing Code</h4>
                <p>
                    Escrito por Martin Fowler, este libro explora cómo mejorar 
                    el diseño de código existente sin cambiar su funcionalidad. 
                    Detalla técnicas para hacer que el código sea más legible y 
                    eficiente. Disponible en
                    <a href="https://www.amazon.com/Refactoring-Improving-Existing-Addison-Wesley-Signature/dp/0134757599" target="_blank"> Amazon</a>
                </p>
                <img src="~/imagenes/diseno2.jpg" class="img-fluid" width="300" height="200" />
            </div>
        </div>
        <div class="col-md-4">
            <div class="p-3 border bg-light">
                <h4>Head First Design Patterns</h4>
                <p>
                    Eric Freeman y Elisabeth Robson presentan patrones de 
                    diseño de manera visual y divertida, ideal para principiantes. 
                    Este libro hace que los conceptos complejos sean accesibles y 
                    fáciles de entender. Más información en
                    <a href="https://www.amazon.com/Head-First-Design-Patterns-Brain-Friendly/dp/0596007124" target="_blank"> Amazon</a>
                </p>
                <img src="~/imagenes/diseno3.jpg" class="img-fluid" width="300" height="200" />
            </div>
        </div>
    </div>
</div>


